package container;

import component.Player;
import gui.GameScreen;
import ingredients.Ingredient;
import interfaces.Heldable;
import interfaces.Interactable;
import logic.StaticObject;
import menu.MenuFactory;

public class Counter extends StaticObject implements Interactable{
    private Container containerOnCounter = null;  // container ‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô counter

    public Counter(String name, String staticImageURL, Double xPosition, Double yPosition, boolean isCollidable, boolean isInteractable) {
        super(name,staticImageURL, xPosition, yPosition,isCollidable,isInteractable);
    }

    @Override
    public void interact() {
    	 Player player = Player.getInstance();
    	    Heldable held = player.getHeldItem();

    	    if (held == null) {
    	        // ‡πÑ‡∏°‡πà‡∏ñ‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á ‚Üí ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏´‡∏¢‡∏¥‡∏ö
    	        if (containerOnCounter != null) {
    	            player.setHeldItem(containerOnCounter);
    	            GameScreen.getInstance().setFeedback("‡∏Ñ‡∏∏‡∏ì‡∏´‡∏¢‡∏¥‡∏ö " + containerOnCounter.getName() + " ‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏≤‡∏ô‡πå‡πÄ‡∏ï‡∏≠‡∏£‡πå");
    	            containerOnCounter = null;
    	        } else {
    	        	 GameScreen.getInstance().setFeedback("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏≤‡∏ô‡πå‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏¥‡∏ö");
    	        }
    	    } else if (held instanceof Ingredient) {
    	        // ‡∏ñ‡∏∑‡∏≠ ingredient
    	        if (containerOnCounter != null) {
    	            containerOnCounter.addIngredient((Ingredient) held);
    	            player.setHeldItem(null);
    	            GameScreen.getInstance().setFeedback("‡πÄ‡∏û‡∏¥‡πà‡∏° " + held.getName() + " ‚Üí ‡πÄ‡∏Ç‡πâ‡∏≤ " + containerOnCounter.getName());
    	         // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° check auto merge ‡∏´‡∏•‡∏±‡∏á add ingredient
    	            if (containerOnCounter.canProcess()) {
    	                containerOnCounter.process();
    	                GameScreen.getInstance().setFeedback("üü¢ Auto merge ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí " + containerOnCounter.getName());
    	            }
    	        } else {
    	        	GameScreen.getInstance().setFeedback("‡πÑ‡∏°‡πà‡∏°‡∏µ container ‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏≤‡∏ô‡πå‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏™‡πà " + held.getName());
    	        }
    	    } else if (held instanceof Container) {
    	        // ‡∏ñ‡∏∑‡∏≠ container
    	        if (containerOnCounter == null) {
    	            containerOnCounter = (Container) held;
    	            // ‚úÖ ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á container ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô counter ‡∏ô‡∏µ‡πâ
    	            containerOnCounter.setPosition(this.getX(), this.getY());
    	            player.setHeldItem(null);
    	            GameScreen.getInstance().setFeedback("‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏≤‡∏á " + containerOnCounter.getName() + " ‡∏•‡∏á‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏≤‡∏ô‡πå‡πÄ‡∏ï‡∏≠‡∏£‡πå");
    	        } else {
    	            // merge container
    	            mergeContainer((Container) held, containerOnCounter);
    	            player.setHeldItem(null);
    	            GameScreen.getInstance().setFeedback("‡∏£‡∏ß‡∏° " + held.getName() + " ‚Üí ‡πÄ‡∏Ç‡πâ‡∏≤ " + containerOnCounter.getName());
    	        }
    	    } else {
    	    	 GameScreen.getInstance().setFeedback("‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏∑‡∏≠ (" + held.getName() + ") ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡πÄ‡∏Ñ‡∏≤‡∏ô‡πå‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ");
    	    }
    }

    private void mergeContainer(Container from, Container to) {
    	 if (from.getMenu() != null) {
    	        boolean merged = false;

    	        if (to instanceof Dish) {
    	            ((Dish) to).setMenu(from.getMenu());
    	            merged = true;
    	        } else if (to instanceof Bowl) {
    	            ((Bowl) to).setMenu(from.getMenu());
    	            merged = true;
    	        } else if (to instanceof Pot) {
    	            if(from.getMenu().isUsableAsIngredient()) {
    	            	((Pot) to).addIngredient(MenuFactory.createIngredientFromMenu(from.getMenu()));
    	            }
    	            merged = true;
    	        } else if (to instanceof Pan) {
    	        	if(from.getMenu().isUsableAsIngredient()) {
    	            	((Pan) to).addIngredient(MenuFactory.createIngredientFromMenu(from.getMenu()));
    	            }
    	            merged = true;
    	        }

    	        if (merged) {
    	            GameScreen.getInstance().setFeedback("‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π " + from.getMenu().getName() + " ‚Üí ‡πÄ‡∏Ç‡πâ‡∏≤ " + to.getName());
    	            from.removeContent();
    	            to.updateName();

    	            // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ auto merge ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏°‡∏ô‡∏π
    	            if (to.canProcess()) {
    	                to.process();
    	                GameScreen.getInstance().setFeedback("üü¢ Auto merge ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí " + to.getName());
    	            }
    	        } else {
    	            GameScreen.getInstance().setFeedback("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ merge: " + to.getName() + " ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏†‡∏≤‡∏ä‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö)");
    	        }
    	    } else {
    	        GameScreen.getInstance().setFeedback("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ merge: " + from.getName() + " ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π (‡∏ï‡πâ‡∏≠‡∏á cook ‡∏Å‡πà‡∏≠‡∏ô)");
    	    }
    }

    public Container getContainerOnCounter() {
        return containerOnCounter;
    }

    public void setContainerOnCounter(Container container) {
        this.containerOnCounter = container;
    }

}
