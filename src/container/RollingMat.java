package container;

import java.util.ArrayList;

import component.Player;
import gui.GameScreen;
import ingredients.Ingredient;
import interfaces.Heldable;
import interfaces.Interactable;
import logic.StaticObject;
import menu.Menu;
import menu.MenuFactory;
import menu.MergeMenu;

public class RollingMat extends StaticObject implements Interactable{
	private ArrayList<Ingredient> placedIngredients = new ArrayList<>();
	private boolean confirmMerging = false;
	private Dish dishOnMat = null;


	public RollingMat(String name, String imageUrl, double x, double y, boolean isCollidable, boolean isInteractable) {
		super(name, imageUrl, x, y, isCollidable, isInteractable);
		// TODO Auto-generated constructor stub
	}

	@Override
	public void interact() {
		Player player = Player.getInstance();
	    Heldable held = player.getHeldItem();

	    if (held instanceof Dish && dishOnMat == null) {
	        // ‡∏ß‡∏≤‡∏á‡∏à‡∏≤‡∏ô
	        dishOnMat = (Dish) held;
	        player.setHeldItem(null);
	        // ‚úÖ ‡∏î‡∏∂‡∏á ingredients ‡∏à‡∏≤‡∏Å‡∏à‡∏≤‡∏ô‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢
	        ArrayList<Ingredient> ingredientsFromDish = dishOnMat.getIngredients(); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ getIngredients() ‡∏°‡∏µ‡πÉ‡∏ô Dish ‡πÅ‡∏•‡πâ‡∏ß
	        if (ingredientsFromDish != null && !ingredientsFromDish.isEmpty()) {
	            placedIngredients.addAll(ingredientsFromDish);
	            // üìù ‡∏£‡∏ß‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
	            StringBuilder ingredientNames = new StringBuilder();
	            for (Ingredient ing : ingredientsFromDish) {
	                ingredientNames.append(ing.getName()).append(", ");
	            }

	            // üîö ‡∏ï‡∏±‡∏î comma ‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡∏≠‡∏≠‡∏Å
	            if (ingredientNames.length() >= 2) {
	                ingredientNames.setLength(ingredientNames.length() - 2);
	            }

	            GameScreen.getInstance().setFeedback("‡∏ß‡∏≤‡∏á‡∏à‡∏≤‡∏ô‡∏ö‡∏ô RollingMat ‡πÅ‡∏•‡πâ‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö: " + ingredientNames);
	        } else {
	            GameScreen.getInstance().setFeedback("‡∏ß‡∏≤‡∏á‡∏à‡∏≤‡∏ô‡∏ö‡∏ô RollingMat ‡πÅ‡∏•‡πâ‡∏ß!");
	        }
	    }

	    else if (held instanceof Ingredient && dishOnMat != null) {
	        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö
	        placedIngredients.add((Ingredient) held);
	        player.setHeldItem(null);
	        GameScreen.getInstance().setFeedback("‡πÄ‡∏û‡∏¥‡πà‡∏° " + held.getName() + " ‡∏•‡∏á‡∏ö‡∏ô RollingMat");
	    }
	    else if (held instanceof Ingredient && dishOnMat == null) {
	        // ‚ùó ‡∏ñ‡∏∑‡∏≠ Ingredient ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≤‡∏ô ‚Üí ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
	        GameScreen.getInstance().setFeedback("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏ß‡∏≤‡∏á‡∏à‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏™‡πà‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏ö‡∏ô RollingMat");
	    }
	    else if (held == null && placedIngredients.size() >= 2) {
	        // ‡πÄ‡∏£‡∏¥‡πà‡∏°/‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô merge
	        if (!confirmMerging) {
	            boolean canMerge = MergeMenu.findMatchingMenu(placedIngredients, Dish.class) != null;
	            if (canMerge) {
	                confirmMerging = true;
	                GameScreen.getInstance().setFeedback("‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏ß‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏î‡πâ! ‡∏Å‡∏î‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô");
	            } else {
	            	GameScreen.getInstance().setFeedback("‚ùå ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏ô‡∏µ‡πâ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö");
	                this.clearIngredients();
	            }
	        }
	        else {
	            String menuName = MergeMenu.findMatchingMenu(placedIngredients, Dish.class);
	            if (menuName != null) {
	                Menu menu = MenuFactory.createMenu(menuName);
	                dishOnMat.setMenu(menu);
	                placedIngredients.clear();
	                player.setHeldItem(dishOnMat);
	                dishOnMat = null;
	                confirmMerging = false;
	                GameScreen.getInstance().setFeedback("‡∏£‡∏ß‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + menuName);
	            }
	        }
	    }

	    else if (held == null && dishOnMat != null && placedIngredients.isEmpty()) {
	        // ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡∏≠‡∏∞‡πÑ‡∏£)
	        player.setHeldItem(dishOnMat);
	        dishOnMat = null;
	        GameScreen.getInstance().setFeedback("‡∏Ñ‡∏∏‡∏ì‡∏´‡∏¢‡∏¥‡∏ö‡∏à‡∏≤‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏à‡∏≤‡∏Å RollingMat");
	    }

	    else if (held instanceof Container && !(held instanceof Dish)) {
	    	Container container = (Container) held;
	        if (container.getMenu() != null && dishOnMat != null) {
	            // ‡πÅ‡∏õ‡∏•‡∏á menu ‡πÉ‡∏ô pot/pan ‡πÄ‡∏õ‡πá‡∏ô Ingredient
	            Menu menu = container.getMenu();
	            if (menu.isUsableAsIngredient()) {
	                Ingredient fromMenu = MenuFactory.createIngredientFromMenu(menu);
	                placedIngredients.add(fromMenu);
	                player.setHeldItem(null); // ‡πÄ‡∏≠‡∏≤‡∏°‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏á
	                GameScreen.getInstance().setFeedback("‡πÄ‡∏ó " + menu.getName() + " ‡πÉ‡∏™‡πà‡∏à‡∏≤‡∏ô‡∏ö‡∏ô RollingMat ‡πÅ‡∏•‡πâ‡∏ß");
	            } else {
	                GameScreen.getInstance().setFeedback("‡πÄ‡∏°‡∏ô‡∏π " + menu.getName() + " ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÑ‡∏î‡πâ");
	            }
	        } else {
	            GameScreen.getInstance().setFeedback("RollingMat ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏à‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏†‡∏≤‡∏ä‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πÑ‡∏î‡πâ");
	        }
	    }

	    else {
	        GameScreen.getInstance().setFeedback("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ");
	    }
	}
	public Dish getDishOnMat() {
        return  dishOnMat;
    }
	public void clearIngredients() {
	    placedIngredients.clear();
	    GameScreen.getInstance().setFeedback("üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å RollingMat ‡πÅ‡∏•‡πâ‡∏ß");
	}

	public void setDishOnMat(Dish dishOnMat) {
		this.dishOnMat = dishOnMat;
	}
	

}
